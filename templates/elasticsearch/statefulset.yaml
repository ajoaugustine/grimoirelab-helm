{{- if .Values.elasticsearch.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "grimoirelab.fullname" . }}-elasticsearch
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "grimoirelab.labels" . | nindent 4 }}
    app.kubernetes.io/component: elasticsearch
spec:
  serviceName: {{ include "grimoirelab.fullname" . }}-elasticsearch-headless
  replicas: {{ .Values.elasticsearch.replicas }}
  selector:
    matchLabels:
      {{- include "grimoirelab.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: elasticsearch
  template:
    metadata:
      labels:
        {{- include "grimoirelab.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: elasticsearch
    spec:
      serviceAccountName: {{ include "grimoirelab.serviceAccountName" . }}
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: configure-sysctl
          image: busybox:1.35
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
          securityContext:
            privileged: true
      containers:
        - name: elasticsearch
          image: {{ include "grimoirelab.image" (dict "global" .Values.global "repository" .Values.elasticsearch.image.repository "tag" .Values.elasticsearch.image.tag) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP
          env:
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ES_JAVA_OPTS
              value: {{ .Values.elasticsearch.javaOpts | quote }}
            {{- range $key, $value := .Values.elasticsearch.config }}
            - name: {{ $key | replace "." "_" | upper }}
              value: {{ $value | quote }}
            {{- end }}
          resources:
            {{- toYaml .Values.elasticsearch.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
          livenessProbe:
            httpGet:
              path: /_cluster/health
              port: http
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
  {{- if .Values.elasticsearch.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- if .Values.elasticsearch.persistence.storageClass }}
        storageClassName: {{ .Values.elasticsearch.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.elasticsearch.persistence.size }}
  {{- else }}
      volumes:
        - name: data
          emptyDir: {}
  {{- end }}
{{- end }}
