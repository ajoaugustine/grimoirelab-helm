{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "grimoirelab.fullname" . }}-redis
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "grimoirelab.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  replicas: {{ .Values.redis.replicas }}
  selector:
    matchLabels:
      {{- include "grimoirelab.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: redis
  template:
    metadata:
      labels:
        {{- include "grimoirelab.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: redis
    spec:
      serviceAccountName: {{ include "grimoirelab.serviceAccountName" . }}
      containers:
        - name: redis
          image: {{ include "grimoirelab.image" (dict "global" .Values.global "repository" .Values.redis.image.repository "tag" .Values.redis.image.tag) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretRef:
                  name: {{ include "grimoirelab.fullname" . }}-secrets
                  key: redis-password
          command:
            - redis-server
            - --requirepass
            - $(REDIS_PASSWORD)
            - --appendonly
            - "yes"
            - --save
            - "900 1"
            - --save
            - "300 10"
            - --save
            - "60 10000"
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        {{- if .Values.redis.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "grimoirelab.fullname" . }}-redis-pvc
        {{- else }}
        - name: data
          emptyDir: {}
        {{- end }}
---
{{- if .Values.redis.persistence.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "grimoirelab.fullname" . }}-redis-pvc
  namespace: {{ .Values.namespace.name }}
  labels:
    {{- include "grimoirelab.labels" . | nindent 4 }}
    app.kubernetes.io/component: redis
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.redis.persistence.storageClass }}
  storageClassName: {{ .Values.redis.persistence.storageClass }}
  {{- end }}
  resources:
    requests:
      storage: {{ .Values.redis.persistence.size }}
{{- end }}
{{- end }}
